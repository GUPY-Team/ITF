version: "3.8"

services:
  reverse-proxy:
    image: traefik:2.6
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --accesslog
      - --log
      - --api
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  identity-server:
    labels:
      - traefik.enable=true

      - traefik.http.routers.identity.entrypoints=https
      - traefik.http.routers.identity.rule=Host(`identity.itfinder-local.xyz`)
      - traefik.http.routers.identity.tls=true

      - traefik.http.services.identity.loadbalancer.server.port=1000
    build:
      context: .
      dockerfile: ./server/Services/Identity/IdentityServer/dockerfile
    depends_on:
      - database
    ports:
      - "1000:1000"
    environment:
      ASPNETCORE_URLS: "http://+:1000"
      ConnectionStrings__Postgres: "Host=database;Username=postgres;Password=postgres;Database=itf"
      OAuth__Google__ClientId: $GOOGLE_CLIENT_ID
      OAuth__Google__ClientSecret: $GOOGLE_CLIENT_SECRET
  itf:
    labels:
      - traefik.enable=true

      - traefik.http.routers.itf.entrypoints=https
      - traefik.http.routers.itf.rule=Host(`api.itfinder-local.xyz`)
      - traefik.http.routers.itf.tls=true

      - traefik.http.services.itf.loadbalancer.server.port=2000
    build:
      context: .
      dockerfile: ./server/Services/ITF/ITF.Api/dockerfile
    depends_on:
      - identity-server
    ports:
      - "2000:2000"
    environment:
      ASPNETCORE_URLS: "http://+:2000"
      ConnectionStrings__Postgres: "Host=database;Username=postgres;Password=postgres;Database=itf"
  chat:
    labels:
      - traefik.enable=true

      - traefik.http.routers.chat.entrypoints=https
      - traefik.http.routers.chat.rule=Host(`chat.itfinder-local.xyz`)
      - traefik.http.routers.chat.tls=true

      - traefik.http.services.chat.loadbalancer.server.port=3000
    build:
      context: .
      dockerfile: ./server/Services/Chat/Chat.Hub/dockerfile
    depends_on:
      - identity-server
    ports:
      - "3000:3000"
    environment:
      ASPNETCORE_URLS: "http://+:3000"
      ConnectionStrings__Postgres: "Host=database;Username=postgres;Password=postgres;Database=itf"
  database:
    restart: on-failure
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "itf"
    volumes:
      - database-vol:/var/lib/postgresql/data

volumes:
  database-vol: